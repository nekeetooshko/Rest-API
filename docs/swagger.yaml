basePath: /
definitions:
  handler.Error:
    properties:
      message:
        type: string
    type: object
  handler.signInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  todo.TodoItem:
    properties:
      description:
        type: string
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  todo.TodoList:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  todo.User:
    properties:
      name:
        description: binding - встроенный в гин тег для валидации
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - name
    - password
    - username
    type: object
host: localhost:9090
info:
  contact: {}
  description: Test Rest-API from Maksim Zhashkevich YouTube channel
  title: Test Rest-API
  version: "1.0"
paths:
  /api/lists:
    get:
      consumes:
      - application/json
      description: Return all lists by user id
      operationId: get-all-lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/todo.TodoList'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: Get all lists
      tags:
      - Lists endpoints
    post:
      consumes:
      - application/json
      description: Creates a new list instance
      operationId: create-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.TodoList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: Create list
      tags:
      - Lists endpoints
  /api/lists/:id/items:
    get:
      consumes:
      - application/json
      description: Return all items by list_id
      operationId: return-all-items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/todo.TodoItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: Return all items
      tags:
      - Items endpoints
    post:
      consumes:
      - application/json
      description: Create new item by user_id & list_id
      operationId: create-new-item
      parameters:
      - description: New item
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.TodoItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Error'
      security:
      - ApiKeyAuth: []
      summary: Create new item
      tags:
      - Items endpoints
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login into user account
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Client sign in
      tags:
      - Authentification endpoints
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create user account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Client sign up
      tags:
      - Authentification endpoints
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
